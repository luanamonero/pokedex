{"ast":null,"code":"var _jsxFileName = \"/home/luana/trybe-exercises/exercises/Front-end/bloco_11/11.2/my-pokedex/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport pokemons from './data';\nimport Pokemon from './pokemon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.resetState = () => window.location.reload();\n\n    this.proximoPokemon = this.proximoPokemon.bind(this);\n    this.resetState = this.resetState.bind(this);\n    this.state = {\n      proximoPokemon: 0\n    };\n  } // A pokedex faz o tratamento com o status para definir quall poquemon vai como props para o compopnente pokemon.\n  // Pokemon devie como vai tratar e apresentar o card polkemon.\n  // Ou seja - App redereriza tudo. Pokedex devine pokemon. Pokemon define molde. Buton define state pokedex.\n  // acessar a propriedade de cada um dos elementos pelo tipo e retornar um array com todo os poquemons desse tipo. \n  // O tipo será escolhido pelo dropdpwm\n  // Pokemons sera renderizado por mep que usará como parametro os itens do state.\n\n\n  proximoPokemon() {\n    this.setState((estadoAnterior, _props) => ({\n      proximoPokemon: estadoAnterior.proximoPokemon + 1\n    }));\n\n    if (this.state.proximoPokemon === 8) {\n      this.resetState();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Pokedex \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pokemon, {\n        pokemon: pokemons[this.state.proximoPokemon]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.proximoPokemon,\n        children: \"Pr\\xF3ximo Pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/luana/trybe-exercises/exercises/Front-end/bloco_11/11.2/my-pokedex/src/App.js"],"names":["React","pokemons","Pokemon","App","Component","constructor","props","resetState","window","location","reload","proximoPokemon","bind","state","setState","estadoAnterior","_props","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,QAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAGA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiBnBC,UAjBmB,GAiBN,MAAOC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAjBD;;AAEjB,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKL,UAAL,GAAkB,KAAKA,UAAL,CAAgBK,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,KAAL,GAAa;AACXF,MAAAA,cAAc,EAAE;AADL,KAAb;AAGD,GAR+B,CAUhC;AACA;AACA;AAEA;AACA;AACA;;;AAIAA,EAAAA,cAAc,GAAG;AACf,SAAKG,QAAL,CAAc,CAACC,cAAD,EAAiBC,MAAjB,MAA4B;AACxCL,MAAAA,cAAc,EAAEI,cAAc,CAACJ,cAAf,GAAgC;AADR,KAA5B,CAAd;;AAGA,QAAG,KAAKE,KAAL,CAAWF,cAAX,KAA8B,CAAjC,EAAoC;AAAC,WAAKJ,UAAL;AAAkB;AACxD;;AAEDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEhB,QAAQ,CAAC,KAAKY,KAAL,CAAWF,cAAZ;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKA,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAnC+B;;AAsClC,eAAeR,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport pokemons from './data';\nimport Pokemon from './pokemon';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.proximoPokemon = this.proximoPokemon.bind(this)\n    this.resetState = this.resetState.bind(this)\n    this.state = {\n      proximoPokemon: 0,\n    }\n  }\n  \n  // A pokedex faz o tratamento com o status para definir quall poquemon vai como props para o compopnente pokemon.\n  // Pokemon devie como vai tratar e apresentar o card polkemon.\n  // Ou seja - App redereriza tudo. Pokedex devine pokemon. Pokemon define molde. Buton define state pokedex.\n\n  // acessar a propriedade de cada um dos elementos pelo tipo e retornar um array com todo os poquemons desse tipo. \n  // O tipo será escolhido pelo dropdpwm\n  // Pokemons sera renderizado por mep que usará como parametro os itens do state.\n\n  resetState = () =>  window.location.reload();\n\n  proximoPokemon() {\n    this.setState((estadoAnterior, _props) =>({\n      proximoPokemon: estadoAnterior.proximoPokemon + 1,\n    }))\n    if(this.state.proximoPokemon === 8) {this.resetState()}\n  }\n\n  render() {\n    return (\n      <div>\n          <h1> Pokedex </h1>\n          <Pokemon pokemon={pokemons[this.state.proximoPokemon]}/>\n          <button onClick={this.proximoPokemon}>Próximo Pokemon</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}