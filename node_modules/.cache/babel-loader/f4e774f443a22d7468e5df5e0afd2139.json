{"ast":null,"code":"var _jsxFileName = \"/home/luana/trybe-exercises/exercises/Front-end/bloco_11/11.2/my-pokedex/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport pokemons from './data';\nimport Pokemon from './pokemon';\nimport Option from './option'; // Consulta feita no repositório [Lima][Pokedex]#47\n// A pokedex faz o tratamento com o status para definir quall poquemon vai como props para o compopnente pokemon.\n// Pokemon devie como vai tratar e apresentar o card polkemon.\n// Ou seja - App redereriza tudo. Pokedex devine pokemon. Pokemon define molde. Buton define state pokedex.\n// acessar a propriedade de cada um dos elementos pelo tipo e retornar um array com todo os poquemons desse tipo. \n// O tipo será escolhido pelo dropdpwm\n// Pokemons sera renderizado por mep que usará como parametro os itens do state.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.next = () => {\n      if (this.state.pokemons === this.props.pokemons.filter(pokemon => pokemon.type === this.state.type).length - 1) {\n        this.setState(() => ({\n          pokemons: 0\n        }));\n      } else {\n        this.setState(actualState => ({\n          pokemons: actualState.pokemons + 1\n        }));\n      }\n    };\n\n    this.next = this.next.bind(this);\n    this.state = {\n      proximoPokemon: 0,\n      type: 'Fire'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Pokedex \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pokemon, {\n        pokemon: pokemons[this.state.proximoPokemon]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Option, {\n        listType: pokemons.map(pokemon => pokemon.type)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/luana/trybe-exercises/exercises/Front-end/bloco_11/11.2/my-pokedex/src/App.js"],"names":["React","pokemons","Pokemon","Option","App","Component","constructor","props","next","state","filter","pokemon","type","length","setState","actualState","bind","proximoPokemon","render","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,QAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,IAVmB,GAUZ,MAAM;AACX,UAAI,KAAKC,KAAL,CAAWR,QAAX,KAAwB,KAAKM,KAAL,CAAWN,QAAX,CAAoBS,MAApB,CAA4BC,OAAD,IAAaA,OAAO,CAACC,IAAR,KAAiB,KAAKH,KAAL,CAAWG,IAApE,EAA0EC,MAA1E,GAAmF,CAA/G,EAAkH;AAChH,aAAKC,QAAL,CAAc,OAAO;AACnBb,UAAAA,QAAQ,EAAE;AADS,SAAP,CAAd;AAGD,OAJD,MAIO;AACL,aAAKa,QAAL,CAAeC,WAAD,KAAkB;AAC9Bd,UAAAA,QAAQ,EAAEc,WAAW,CAACd,QAAZ,GAAuB;AADH,SAAlB,CAAd;AAGD;AACF,KApBkB;;AAEjB,SAAKO,IAAL,GAAY,KAAKA,IAAL,CAAUQ,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKP,KAAL,GAAa;AACXQ,MAAAA,cAAc,EAAE,CADL;AAEXL,MAAAA,IAAI,EAAE;AAFK,KAAb;AAKD;;AAcDM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEjB,QAAQ,CAAC,KAAKQ,KAAL,CAAWQ,cAAZ;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEhB,QAAQ,CAACkB,GAAT,CAAaR,OAAO,IAAIA,OAAO,CAACC,IAAhC;AAAlB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA/B+B;;AAkClC,eAAeR,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport pokemons from './data';\nimport Pokemon from './pokemon';\nimport Option from './option';\n\n// Consulta feita no repositório [Lima][Pokedex]#47\n// A pokedex faz o tratamento com o status para definir quall poquemon vai como props para o compopnente pokemon.\n// Pokemon devie como vai tratar e apresentar o card polkemon.\n// Ou seja - App redereriza tudo. Pokedex devine pokemon. Pokemon define molde. Buton define state pokedex.\n\n// acessar a propriedade de cada um dos elementos pelo tipo e retornar um array com todo os poquemons desse tipo. \n// O tipo será escolhido pelo dropdpwm\n// Pokemons sera renderizado por mep que usará como parametro os itens do state.\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.next = this.next.bind(this);\n    this.state = {\n      proximoPokemon: 0,\n      type: 'Fire'\n    }\n\n  }\n\n  next = () => {\n    if (this.state.pokemons === this.props.pokemons.filter((pokemon) => pokemon.type === this.state.type).length - 1) {\n      this.setState(() => ({\n        pokemons: 0,\n      }));\n    } else {\n      this.setState((actualState) => ({\n        pokemons: actualState.pokemons + 1,\n      }));\n    }\n  };\n\n  render() {\n    return (\n      <div>\n          <h1> Pokedex </h1>\n          <Pokemon pokemon={pokemons[this.state.proximoPokemon]}/>\n          <Option listType={pokemons.map(pokemon => pokemon.type)} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}